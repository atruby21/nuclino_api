// Mocks generated by Mockito 5.2.0 from annotations
// in nuclino_api/test/src/mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;
import 'dart:typed_data' as _i10;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nuclino_api/nuclino_api.dart' as _i8;
import 'package:nuclino_api/src/child.dart' as _i3;
import 'package:nuclino_api/src/file.dart' as _i5;
import 'package:nuclino_api/src/team.dart' as _i6;
import 'package:nuclino_api/src/users.dart' as _i7;
import 'package:nuclino_api/src/workspace.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeChildService_1 extends _i1.Fake implements _i3.ChildService {}

class _FakeWorkSpaceService_2 extends _i1.Fake implements _i4.WorkSpaceService {
}

class _FakeFileService_3 extends _i1.Fake implements _i5.FileService {}

class _FakeTeamService_4 extends _i1.Fake implements _i6.TeamService {}

class _FakeUserService_5 extends _i1.Fake implements _i7.UserService {}

/// A class which mocks [Nuclino].
///
/// See the documentation for Mockito's code generation for more information.
class MockNuclino extends _i1.Mock implements _i8.Nuclino {
  MockNuclino() {
    _i1.throwOnMissingStub(this);
  }

  @override
  Map<String, String> get headers =>
      (super.noSuchMethod(Invocation.getter(#headers),
          returnValue: <String, String>{}) as Map<String, String>);
  @override
  String get apiKey =>
      (super.noSuchMethod(Invocation.getter(#apiKey), returnValue: '')
          as String);
  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  String get endpoint =>
      (super.noSuchMethod(Invocation.getter(#endpoint), returnValue: '')
          as String);
  @override
  _i3.ChildService get children =>
      (super.noSuchMethod(Invocation.getter(#children),
          returnValue: _FakeChildService_1()) as _i3.ChildService);
  @override
  _i4.WorkSpaceService get workspaces =>
      (super.noSuchMethod(Invocation.getter(#workspaces),
          returnValue: _FakeWorkSpaceService_2()) as _i4.WorkSpaceService);
  @override
  _i5.FileService get files => (super.noSuchMethod(Invocation.getter(#files),
      returnValue: _FakeFileService_3()) as _i5.FileService);
  @override
  _i6.TeamService get teams => (super.noSuchMethod(Invocation.getter(#teams),
      returnValue: _FakeTeamService_4()) as _i6.TeamService);
  @override
  _i7.UserService get users => (super.noSuchMethod(Invocation.getter(#users),
      returnValue: _FakeUserService_5()) as _i7.UserService);
  @override
  _i9.Future<T> fetch<T>(String? path,
          {Map<String, String>? params, _i8.JSONConverter<T>? convert}) =>
      (super.noSuchMethod(
          Invocation.method(
              #fetch, [path], {#params: params, #convert: convert}),
          returnValue: Future<T>.value(null)) as _i9.Future<T>);
  @override
  _i9.Future<List<T>> fetchAll<T>(String? path,
          {Map<String, String>? params, _i8.JSONConverter<T>? convert}) =>
      (super.noSuchMethod(
          Invocation.method(
              #fetchAll, [path], {#params: params, #convert: convert}),
          returnValue: Future<List<T>>.value(<T>[])) as _i9.Future<List<T>>);
  @override
  _i9.Future<_i10.Uint8List> download(String? path) =>
      (super.noSuchMethod(Invocation.method(#download, [path]),
              returnValue: Future<_i10.Uint8List>.value(_i10.Uint8List(0)))
          as _i9.Future<_i10.Uint8List>);
}
